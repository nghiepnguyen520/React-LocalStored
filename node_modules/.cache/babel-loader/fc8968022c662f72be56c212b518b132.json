{"ast":null,"code":"var _jsxFileName = \"/home/ndeveher/reactjs-app1/src/App.js\";\nimport React, { Component } from \"react\";\nimport TaskFrom from \"./components/TaskFrom\";\nimport TaskFrom2 from \"./components/TaskFrom2\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ChangeDisplay = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.HidenFrom = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.DataTaskFrom = data => {\n      data.id = this.AutoId();\n      console.log(data);\n      var tasks = this.state.tasks;\n      tasks.push(data);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n\n    this.AutoId = () => {\n      return this.rd4() + this.rd4() + \"_\" + this.rd4() + this.rd4();\n    };\n\n    this.state = {\n      isDisplayForm: false,\n      tasks: []\n    };\n  }\n\n  /* Random ID */\n  rd4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  //********* */\n\n  /**/\n  // CreateData = () => {\n  //   var tasks = [\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap trinh\",\n  //       status: true\n  //     },\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap reactjs\",\n  //       status: true\n  //     },\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap blockchain\",\n  //       status: false\n  //     }\n  //   ];\n  //   //luu data bang local\n  //   this.setState({\n  //     tasks: tasks\n  //   });\n  //   // luu vao local & chuyen ve String\n  //   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  // };\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        isDisplayForm = _this$state.isDisplayForm,\n        tasks = _this$state.tasks;\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskFrom, {\n      DataTaskFrom: this.DataTaskFrom,\n      HidenFrom: this.HidenFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : \"\";\n    return React.createElement(\"div\", {\n      className: isDisplayForm ? \"main\" : \"main2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui action input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"buttonAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.ChangeDisplay,\n      className: \"ui primary button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add jobs\"), React.createElement(\"button\", {\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Sort\"))), React.createElement(TaskFrom2, {\n      tasks: tasks,\n      OnUpdateStatus: this.OnUpdateStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ndeveher/reactjs-app1/src/App.js"],"names":["React","Component","TaskFrom","TaskFrom2","App","constructor","props","ChangeDisplay","setState","isDisplayForm","state","HidenFrom","DataTaskFrom","data","id","AutoId","console","log","tasks","push","localStorage","setItem","JSON","stringify","rd4","Math","floor","random","toString","substring","componentWillMount","getItem","parse","render","elmTaskForm","OnUpdateStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskFrom from \"./components/TaskFrom\";\nimport TaskFrom2 from \"./components/TaskFrom2\";\nimport \"./App.css\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayForm: false,\n      tasks: []\n    };\n  }\n  ChangeDisplay = () => {\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm\n    });\n  };\n  HidenFrom = () => {\n    this.setState({\n      isDisplayForm: false\n    });\n  };\n  //luu data tu taskfrom truyen qua\n  DataTaskFrom = data => {\n    data.id = this.AutoId();\n    console.log(data);\n    var {tasks} = this.state;\n    tasks.push(data);\n    this.setState({\n      tasks:tasks\n    })\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  /* Random ID */\n  rd4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  AutoId = () => {\n    return this.rd4() + this.rd4() + \"_\" + this.rd4() + this.rd4();\n  }; //********* */\n  /**/\n  // CreateData = () => {\n  //   var tasks = [\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap trinh\",\n  //       status: true\n  //     },\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap reactjs\",\n  //       status: true\n  //     },\n  //     {\n  //       id: this.AutoId(),\n  //       name: \"Hoc lap blockchain\",\n  //       status: false\n  //     }\n  //   ];\n\n  //   //luu data bang local\n  //   this.setState({\n  //     tasks: tasks\n  //   });\n  //   // luu vao local & chuyen ve String\n  //   localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  // };\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  render() {\n    var { isDisplayForm, tasks } = this.state;\n    var elmTaskForm = isDisplayForm ? (\n      <TaskFrom DataTaskFrom={this.DataTaskFrom} HidenFrom={this.HidenFrom} />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className={isDisplayForm ? \"main\" : \"main2\"}>\n        <div className=\"\">{elmTaskForm}</div>\n        <div className=\"\">\n          <div>\n            <div className=\"ui action input\">\n              <input type=\"text\" placeholder=\"Search...\" />\n              <button className=\"ui button\">Search</button>\n            </div>\n            <div className=\"buttonAdd\">\n              <button\n                onClick={this.ChangeDisplay}\n                className=\"ui primary button\"\n              >\n                Add jobs\n              </button>\n              {/* <button className=\"ui pink button\" onClick={this.CreateData}>\n                Create data\n              </button> */}\n              <button className=\"ui blue button\">Sort</button>\n            </div>\n          </div>\n          <TaskFrom2 tasks={tasks} OnUpdateStatus={this.OnUpdateStatus} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}